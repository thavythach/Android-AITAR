<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.vuforia.samples.VuforiaSamples"
    android:versionCode="600"
    android:versionName="6.0" >
    <!--
        The application's compatibility with one or more versions of the Android
        platform.

        android:minSdkVersion = application's required minimum API level to run
        android:targetSdkVersion = application's targeted API level
    -->
    <uses-sdk
        android:minSdkVersion="15"
        android:targetSdkVersion="26" />

    <uses-feature android:glEsVersion="0x00020000" />

    <!--
         The application requires a camera.

         NOTE: Any application that requests the CAMERA permission but does not
         declare any camera features with the <uses-feature> element will be
         assumed to use all camera features (auto-focus and flash). Thus, the
         application will not be compatible with devices that do not support
         all camera features. Please use <uses-feature> to declare only the
         camera features that your application does need. For instance, if you
         request the CAMERA permission, but you do not need auto-focus or
         flash, then declare only the android.hardware.camera feature. The
         other camera features that you do not request will no longer be
         assumed as required.
    -->
    <uses-feature android:name="android.hardware.camera" />

    <!-- Add this permission to get access to the camera. -->
    <uses-permission android:name="android.permission.CAMERA" />

    <!-- Add this permission to allow opening network sockets. -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!--
        Add this permission to check which network access properties (e.g.
        active type: 3G/WiFi).
    -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.vuforia.samples.VuforiaSamples.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.vuforia.samples.VuforiaSamples.permission.C2D_MESSAGE" />
    <!--
      NOTE: The setting 'android:launchMode="singleTask"' makes sure
      that the activity can begin only one task and the device can hold only
      one instance of the activity at a time. However, it allows other
      activities to be part of its task (unlike the 'singleInstance' mode).
      It's at the root of the activity stack, but other activities (necessarily
      "standard" and "singleTop" activities) can be launched into the same task.
      If this attribute is not set, the default value 'standard' is used, which
      would allow the activity to be launched multiple times.
    -->
    <application
        android:allowBackup="true"
        android:debuggable="true"
        android:description="@string/app_description"
        android:icon="@drawable/aitar_logo"
        android:label="@string/app_name"
        android:launchMode="singleTask"
        android:testOnly="true"
        android:theme="@style/SampleAppsTheme" >

        <!--
          NOTE: The values in 'android:configChanges' ensure that Android will
          not destroy and re-create the activity when the user flips the
          keyboard, changes the orientation of the device, or the actual or
          physical screen resolution changes, but calls the Activity's
          onConfigurationChanged() function instead.

          NOTE 2: In order to prevent automatic reactions to orientation
          changes in addition to setting proper values for
          'android:configChanges', you also must explicitly specify the screen
          orientation used by the application, either by setting the attribute
          'android:screenOrientation' or in code by calling
          Activity.setRequestedOrientation().
        -->
        <!-- Splash Screen Activity -->
        <activity
            android:name="com.vuforia.samples.VuforiaSamples.ui.ActivityList.ActivitySplashScreen"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:noHistory="true"
            android:screenOrientation="portrait" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.vuforia.samples.VuforiaSamples.app.ImageTargets.ImageTargets"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:launchMode="singleTask"
            android:theme="@style/SampleAppsTheme" />
        <activity
            android:name="com.vuforia.samples.VuforiaSamples.app.VuMark.VuMark"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:launchMode="singleTask"
            android:theme="@style/SampleAppsTheme" />
        <activity
            android:name="com.vuforia.samples.VuforiaSamples.app.TapAR.TapAR"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:launchMode="singleTask"
            android:theme="@style/SampleAppsTheme" />
        <activity
            android:name="com.vuforia.samples.VuforiaSamples.ui.ActivityList.ActivityLogin"
            android:label="@string/title_activity_login"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.AppCompat.Light" />
        <activity
            android:name="com.vuforia.samples.VuforiaSamples.ui.ActivityList.ActivityUser"
            android:label="@string/title_activity_user"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.AppCompat.Light" />

        <meta-data
            android:name="android.support.VERSION"
            android:value="26.1.0" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />

                <category android:name="com.vuforia.samples.VuforiaSamples" />
            </intent-filter>
        </receiver>
        <!--
 Internal (not exported) receiver used by the app to start its own exported services
             without risk of being spoofed.
        -->
        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdInternalReceiver"
            android:exported="false" />
        <!--
 FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.vuforia.samples.VuforiaSamples.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <meta-data
            android:name="android.arch.lifecycle.VERSION"
            android:value="27.0.0-SNAPSHOT" />
    </application>

</manifest>